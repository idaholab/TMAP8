[Tests]
  design = 'TrappingNodalKernel.md ReleasingNodalKernel.md'
  issues = '#12'
  verification = 'ver-1dc.md'
  [ver-1dc_limited]
    type = Exodiff
    input = ver-1dc.i
    exodiff = ver-1dc_limited_test_exodus.e
    cli_args = "nx_num=20 Executioner/num_steps=300 Outputs/file_base=ver-1dc_limited_test_exodus"
    requirement = 'The system shall be able to model a breakthrough problem of multiple traps.'
  []
  [ver-1dc_limited_heavy]
    type = Exodiff
    heavy = true
    input = ver-1dc.i
    exodiff = ver-1dc_out.e
    requirement = 'The system shall be able to model a breakthrough problem of multiple traps, with the fine mesh and time step required to match the analytical solution for the verification case.'
  []
  [ver-1dc_limited_heavy_csvdiff]
    type = CSVDiff
    heavy = true
    input = ver-1dc.i
    should_execute = false # this test relies on the output files from ver-1dc_limited_heavy, so it shouldn't be run twice
    csvdiff = ver-1dc_out.csv
    prereq = ver-1dc_limited_heavy
    requirement = 'The system shall be able to model a breakthrough problem of multiple traps,
    with the fine mesh and time step required to match the analytical solution for the verification case and generate CSV data for use in comparisons with the analytic solution.'
  []
  [ver-1d_comparison]
    type = RunCommand
    command = 'python3 comparison_ver-1dc.py'
    requirement = 'The system shall be able to generate comparison plots between the analytical solution and simulated solutions of verification cases 1dc, modeling a breakthrough problem of multiple traps.'
    required_python_packages = 'matplotlib numpy pandas os'
  []
  [ver-1dc-mms]
    type = PythonUnitTest
    input = test.py
    test_case = TestMMS
    heavy = true
    requirement = 'The system shall show second order spatial convergence for a diffusion-trapping-release test case.'
    method = '!dbg'
    required_python_packages = 'pandas matplotlib'
    # skip test if test is being run out-of-tree. Issue Ref: idaholab/moose#25279
    installation_type = in_tree
  []
[]
