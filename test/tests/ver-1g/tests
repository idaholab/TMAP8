[Tests]
  design = 'ADMatReactionFlexible.md'
  issues = '#12'
  verification = 'ver-1g.md'
  [binary_reaction_equal_concentrations]
    type = Exodiff
    input = 'ver-1g.i equal_conc.i'
    exodiff = equal_conc_out.e
    requirement = 'The system shall be able to model a chemical reaction between two species with the same concentrations and calculate the concentrations of reactants and product as a function of time'
  []
  [binary_reaction_equal_concentrations_physics]
    type = Exodiff
    input = 'ver-1g-physics.i equal_conc.i'
    cli_args = 'Outputs/file_base=equal_conc_physics_out'
    exodiff = equal_conc_physics_out.e
    requirement = 'The system shall be able to model a chemical reaction between two species with the same concentrations and calculate the concentrations of reactants and product as a function of time using the Physics syntax'
    verification = 'ver-1g.md'
  []
  [binary_reaction_diff_concentrations_TMAP4]
    type = Exodiff
    input = 'ver-1g.i diff_conc_TMAP4.i'
    exodiff = diff_conc_TMAP4_out.e
    requirement = 'The system shall be able to model a chemical reaction between two species with different concentrations and calculate the concentrations of reactants and product as a function of time using the initial conditions from the TMAP4 case'
  []
  [binary_reaction_diff_concentrations_TMAP7]
    type = Exodiff
    input = 'ver-1g.i diff_conc_TMAP7.i'
    exodiff = diff_conc_TMAP7_out.e
    requirement = 'The system shall be able to model a chemical reaction between two species with different concentrations and calculate the concentrations of reactants and product as a function of time using the initial conditions from the TMAP7 case'
  []
  [binary_reaction_equal_concentrations_csv_diff]
    type = CSVDiff
    input = 'ver-1g.i equal_conc.i'
    should_execute = False # this test relies on the output files from binary_reaction_equal_concentrations, so it shouldn't be run twice
    csvdiff = equal_conc_out.csv
    requirement = 'The system shall be able to model a chemical reaction between two species with the same concentrations and calculate the concentrations of reactants and product as a function of time, to match the analytical solution to generate CSV data for use in comparisons with the analytic solution over time.'
    prereq = binary_reaction_equal_concentrations
  []
  [binary_reaction_diff_concentrations_csv_diff_TMAP4]
    type = CSVDiff
    input = 'ver-1g.i diff_conc_TMAP4.i'
    should_execute = False # this test relies on the output files from binary_reaction_equal_concentrations, so it shouldn't be run twice
    csvdiff = diff_conc_TMAP4_out.csv
    requirement = 'The system shall be able to model a chemical reaction between two species with different concentrations using the initial conditions from the TMAP4 case and calculate the concentrations of reactants and product as a function of time to generate CSV data for use in comparisons with the analytic solution over time.'
    prereq = binary_reaction_diff_concentrations_TMAP4
  []
  [binary_reaction_diff_concentrations_csv_diff_TMAP7]
    type = CSVDiff
    input = 'ver-1g.i diff_conc_TMAP7.i'
    should_execute = False # this test relies on the output files from binary_reaction_equal_concentrations, so it shouldn't be run twice
    csvdiff = diff_conc_TMAP7_out.csv
    requirement = 'The system shall be able to model a chemical reaction between two species with different concentrations using the initial conditions from the TMAP7 case and calculate the concentrations of reactants and product as a function of time to generate CSV data for use in comparisons with the analytic solution over time.'
    prereq = binary_reaction_diff_concentrations_TMAP7
  []
  [ver-1g_comparison]
    type = RunCommand
    command = 'python3 comparison_ver-1g.py'
    requirement = 'The system shall be able to generate comparison plots between the analytical solution and simulated solution of a chemical reaction between two species with same or different concentrations, using the initial conditions from both TMAP4 and TMAP7 cases.'
    required_python_packages = 'matplotlib numpy pandas os'
  []
[]
