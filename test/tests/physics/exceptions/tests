[Tests]
  [diffusion_reaction_wrong_sizes]
    requirement = "The system shall return an error if"
    design = 'SpeciesDiffusionReaction.md'
    issues = '#8'
    [reaction_species_coeff_reaction]
      type = RunException
      input = diffusion_reaction.i
      cli_args = "Physics/SpeciesDiffusionReaction/all/reacting_species='a' Physics/SpeciesDiffusionReaction/all/reaction_coefficients='1 2'"
      detail = "the number of reaction coefficients species does not match the number of groups of reacting species,"
      expect_err = "Vector parameters 'reacting_species' \(size 1\) and 'reaction_coefficients' \(size 2\) must be the same size"
    []
    [reaction_species_product]
      type = RunException
      input = diffusion_reaction.i
      cli_args = "Physics/SpeciesDiffusionReaction/all/reacting_species='a' Physics/SpeciesDiffusionReaction/all/product_species='b; c'"
      detail = "the number of groups of product species does not match the number of groups of reacting species."
      expect_err = "Vector parameters 'reacting_species' \(size 1\) and 'product_species' \(size 2\) must be the same siz"
    []
    [reaction_species_reactant_coeff]
      type = RunException
      input = diffusion_reaction.i
      cli_args = "Physics/SpeciesDiffusionReaction/all/reacting_species='a' Physics/SpeciesDiffusionReaction/all/reacting_species_coefficients='1 2'"
      detail = "the number of coefficients for reacting species does not match the vectors of reacting species,"
      expect_err = "Vector at index 0 of 2D vector parameter 'reacting_species' is not the same size as its counterpart from 2D vector parameter 'reacting_species_coefficients'"
    []
    [reaction_species_product_coeff]
      type = RunException
      input = diffusion_reaction.i
      cli_args = "Physics/SpeciesDiffusionReaction/all/product_species='a' Physics/SpeciesDiffusionReaction/all/product_species_coefficients='1 2'"
      detail = "the number of coefficients for product species does not match the vectors of product species,"
      expect_err = "Vector at index 0 of 2D vector parameter 'product_species' is not the same size as its counterpart from 2D vector parameter 'product_species_coefficients'"
    []
  []
  [diffusion_reaction_bad_input]
    requirement = "The system shall return"
    design = 'SpeciesDiffusionReaction.md'
    issues = '#8'
    [reactant_missing_variable]
      type = RunException
      input = diffusion_reaction.i
      cli_args = "Physics/SpeciesDiffusionReaction/all/reacting_species='a'"
      detail = "an error if one of the reactants does not exist in the simulation,"
      expect_err = "Reactant species 'a' is not a variable"
    []
    [reactant_aux_variable]
      type = RunException
      input = diffusion_reaction.i
      cli_args = "Physics/SpeciesDiffusionReaction/all/reacting_species='a' AuxVariables/a/family=LAGRANGE"
      detail = "a warning if one of the reactants is auxiliary and will not be computed by setting kernels the Physics,"
      expect_err = "Variable 'a' is auxiliary, so its consumption cannot be tracked using kernels!"
    []
    [product_missing_variable]
      type = RunException
      input = diffusion_reaction.i
      cli_args = "Physics/SpeciesDiffusionReaction/all/product_species='a'"
      detail = "an error if one of the products does not exist in the simulation,"
      expect_err = "Product species 'a' is not a variable"
    []
    [product_aux_variable]
      type = RunException
      input = diffusion_reaction.i
      cli_args = "Physics/SpeciesDiffusionReaction/all/product_species='a' AuxVariables/a/family=LAGRANGE"
      detail = "a warning if one of the products is auxiliary and will not be computed by setting kernels the Physics,"
      expect_err = "Variable 'a' is auxiliary, so its production cannot be tracked using kernels!"
    []
  []
  [sorption_wrong_sizes]
    design = 'SorptionExchangePhysics.md'
    issues = '#8'
    requirement = "The system shall return an error if"
    [species_initial_p]
      type = RunException
      input = sorption_exchange.i
      cli_args = "Physics/SorptionExchange/0d_solub/species_initial_pressures='1 2'"
      detail = "the number of species does not match the number of species initial pressures,"
      expect_err = "Parameter 'species' \(size 1\) and 'species_initial_pressures' \(size 2\) must be the same size if set."
    []
    [species_equilibrium]
      type = RunException
      input = sorption_exchange.i
      cli_args = "Physics/SorptionExchange/0d_solub/equilibrium_constants='1 2'"
      detail = "the number of species does not match the number of sorption equilibrium constants."
      expect_err = "Parameter 'species' \(size 1\) and 'equilibrium_constants' \(size 2\) must be the same size if set"
    []
  []
  [sorption_bad_data]
    design = 'SorptionExchangePhysics.md'
    issues = '#8'
    requirement = "The system shall return an error if"
    [temperature]
      type = RunException
      input = sorption_exchange.i
      cli_args = "Physics/SorptionExchange/0d_solub/temperature=-1 ActionComponents/enc/temperature=-1"
      detail = "the temperature specified is negative,"
      expect_err = "Temperature '-1' on component 'enc' inferior or equal to 0"
    []
    [temperature_var]
      type = RunException
      input = sorption_exchange.i
      cli_args = "Physics/SorptionExchange/0d_solub/temperature=temp ActionComponents/enc/temperature=temp AuxVariables/temp/family=LAGRANGE"
      detail = "the temperature is specified as a variable which is not currently specified,"
      expect_err = "Only real values are supported"
    []
    [scaling_factor]
      type = RunException
      input = sorption_exchange.i
      cli_args = "Physics/SorptionExchange/0d_solub/species_scaling_factors=0 ActionComponents/enc/species_scaling_factors=0"
      detail = "the species equation scaling factor is negative or null,"
      expect_err = "Range check failed for parameter ActionComponents/enc/species_scaling_factors"
    []
    [initial_pressure]
      type = RunException
      input = sorption_exchange.i
      cli_args = "initial_pressure=-1 Physics/SorptionExchange/0d_solub/species_initial_pressures='-1'"
      detail = "the species initial pressure is negative,"
      expect_err = "Initial condition '-1' for species 'v' on component 'enc' inferior to 0"
    []
    [eq_constant]
      type = RunException
      input = sorption_exchange.i
      cli_args = "Physics/SorptionExchange/0d_solub/equilibrium_constants='0'"
      detail = "the sorption equilibrium constant is negative or null,"
      expect_err = "Equilibrium constant '0' for species 'v' on component 'enc' inferior or equal to 0"
    []
  []
  [trapping_wrong_sizes]
    design = 'SpeciesTrappingPhysics.md'
    issues = '#8'
    requirement = "The system shall return an error if"
    [repeated_species]
      type = RunException
      input = trapping.i
      cli_args = "Physics/SpeciesTrapping/trapped/species='x x'"
      detail = "a species is repeated twice in the list of species,"
      expect_err = "Item 'x' specified in vector parameter 'species' is repeated, which is not allowed."
    []
    [species_initial_concentration]
      type = RunException
      input = trapping.i
      cli_args = "Physics/SpeciesTrapping/trapped/species_initial_concentrations='1 2'"
      detail = "the number of species does not match the number of species initial concentrations,"
      expect_err = "Parameter 'species' \(size 1\) and 'species_initial_concentrations' \(size 2\) must be the same size if set."
    []
    [scaling_factors]
      type = RunException
      input = trapping.i
      cli_args = "Physics/SpeciesTrapping/trapped/species_scaling_factors='1 2'"
      detail = "the number of species does not match the number of species balance equation scaling factors."
      expect_err = "Parameter 'species' \(size 1\) and 'species_scaling_factors' \(size 2\) must be the same size if set"
    []
    [mobile]
      type = RunException
      input = trapping.i
      cli_args = "Physics/SpeciesTrapping/trapped/mobile='a b'"
      detail = "the number of trapped species does not match the number of mobile species,"
      expect_err = "Parameter 'species' \(size 1\) and 'mobile' \(size 2\) must be the same size if set"
    []
    [alpha_t]
      type = RunException
      input = trapping.i
      cli_args = "Physics/SpeciesTrapping/trapped/alpha_t='1 2'"
      detail = "the number of species does not match the number of trapping coefficients,"
      expect_err = "Parameter 'species' \(size 1\) and 'alpha_t' \(size 2\) must be the same size if set"
    []
    [Ct0]
      type = RunException
      input = trapping.i
      cli_args = "Physics/SpeciesTrapping/trapped/Ct0=''"
      detail = "the number of species does not match the number of trapping Ct0 coefficients,"
      expect_err = "Parameter 'species' \(size 1\) and 'Ct0' \(size 0\) must be the same size if set"
    []
    [alpha_r]
      type = RunException
      input = trapping.i
      cli_args = "Physics/SpeciesTrapping/trapped/alpha_r='1 2'"
      detail = "the number of species does not match the number of release coefficients,"
      expect_err = "Parameter 'species' \(size 1\) and 'alpha_r' \(size 2\) must be the same size if set"
    []
    [detrapping]
      type = RunException
      input = trapping.i
      cli_args = "Physics/SpeciesTrapping/trapped/detrapping_energy='1 2'"
      detail = "the number of species does not match the number of detrapping energies."
      expect_err = "Parameter 'species' \(size 1\) and 'detrapping_energy' \(size 2\) must be the same size if set"
    []
  []
  [trapping_bad_data]
    design = 'SpeciesTrappingPhysics.md'
    issues = '#8'
    requirement = "The system shall return an error if"
    [temperature_fun]
      type = RunException
      input = trapping.i
      cli_args = "Physics/SpeciesTrapping/trapped/temperature=temp_fun Functions/temp_fun/type=ConstantFunction Functions/temp_fun/value=1"
      detail = "the temperature is specified as a function when only constants and variables are supported at this time."
      expect_err = "Should be a constant or the name of a variable"
    []
  []
[]
